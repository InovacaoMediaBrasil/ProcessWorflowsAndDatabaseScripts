/*	=============================================
	Author:			Guilherme Branco Stracini
	Create date:	2018-09-04
	Description:	Valida se o item pode ser colocado na lista de item pendente / parado
	============================================= */
ALTER TRIGGER [sankhya].[TRG_INC_UPD_AD_ITEMPARADO]
   ON  sankhya.AD_ITEMPARADO 
   AFTER INSERT, UPDATE
AS 
DECLARE
	@CODPROD		INT,
	@NOME			VARCHAR(120),
	@SALDO			FLOAT,
	@SALDOSTR		VARCHAR(10),
	@SOLICITANTE	VARCHAR(30),
	@NUNOTA			INT,
	@QTDNEG			FLOAT,
	@USOPROD		CHAR(1),
	@CODKIT			INT,
	@PENDENTE		CHAR(1),
	@SEQ			INT,
	@CODVOL			VARCHAR(4)
BEGIN
	SET NOCOUNT ON;

	SELECT @SOLICITANTE = SUBSTRING(program_name,1,30) FROM MASTER.DBO.SYSPROCESSES (NOLOCK) WHERE SPID = @@SPID;
	
	SELECT	@CODPROD =	I.CODPROD,
			@NOME =		RTRIM(LTRIM(RTRIM(LTRIM(P.DESCRPROD)) + ' ' + RTRIM(LTRIM(ISNULL(P.COMPLDESC, ''))))),
			@CODVOL =	P.CODVOL,
			@SALDO =	ISNULL(E.ESTOQUE, 0) - ISNULL(E.RESERVADO, I.QTDPROD),
			@NUNOTA =	I.NUNOTA,
			@PENDENTE =	C.PENDENTE,
			@QTDNEG =	T.QTDNEG,
			@USOPROD =	T.USOPROD,
			@SEQ =		T.SEQUENCIA
	FROM INSERTED AS I
	LEFT JOIN TGFCAB AS C WITH (NOLOCK)
	ON C.NUNOTA = I.NUNOTA
	LEFT JOIN TGFITE AS T WITH (NOLOCK)
	ON T.NUNOTA = I.NUNOTA AND T.CODPROD = I.CODPROD
	LEFT JOIN TGFEST AS E WITH (NOLOCK)
	ON E.CODPROD = I.CODPROD
	LEFT JOIN TGFPRO AS P WITH (NOLOCK)
	ON P.CODPROD = I.CODPROD;

	IF @CODVOL = 'KT'
	BEGIN
		RAISERROR('O produto %i - %s é um KIT, informe apenas os componentes que se encontram pendentes!', 16, 1, @CODPROD, @NOME);
			IF (UPPER(@SOLICITANTE) LIKE 'MICROSOFT%') OR (@SOLICITANTE = 'MS SQLEM') OR (@SOLICITANTE = 'MS SQL QUERY ANALYZER')
				ROLLBACK TRANSACTION;
	END

	IF @PENDENTE IS NULL
	BEGIN
		RAISERROR('A nota %i não existe!', 16, 1, @NUNOTA);
		IF (UPPER(@SOLICITANTE) LIKE 'MICROSOFT%') OR (@SOLICITANTE = 'MS SQLEM') OR (@SOLICITANTE = 'MS SQL QUERY ANALYZER')
			ROLLBACK TRANSACTION;
	END

	IF @PENDENTE = 'N'
	BEGIN
		RAISERROR('A nota %i não está pendente!', 16, 1, @NUNOTA);
		IF (UPPER(@SOLICITANTE) LIKE 'MICROSOFT%') OR (@SOLICITANTE = 'MS SQLEM') OR (@SOLICITANTE = 'MS SQL QUERY ANALYZER')
			ROLLBACK TRANSACTION;
	END

	IF @USOPROD = 'R'
	AND EXISTS (SELECT 1 FROM TGFICP WHERE CODMATPRIMA = @CODPROD)
		SELECT @CODKIT = I.CODPROD
		FROM TGFITE AS I WITH (NOLOCK)
		WHERE EXISTS (
			SELECT 1
			FROM TGFICP AS C WITH (NOLOCK)
			WHERE C.CODPROD = I.CODPROD
			AND I.SEQUENCIA < @SEQ
			AND C.CODMATPRIMA = @CODPROD
		)

	IF @QTDNEG IS NULL
	BEGIN 
		RAISERROR('O produto %i - %s não existe na nota/expedição %i!', 16, 1, @CODPROD, @NOME, @NUNOTA);
		IF (UPPER(@SOLICITANTE) LIKE 'MICROSOFT%') OR (@SOLICITANTE = 'MS SQLEM') OR (@SOLICITANTE = 'MS SQL QUERY ANALYZER')
			ROLLBACK TRANSACTION;
	END

	IF @SALDO > 0
	BEGIN
		
		SET @SALDOSTR = CAST(@SALDO AS VARCHAR);
		RAISERROR('O produto %i - %s possui %s itens em estoque!', 16, 1, @CODPROD, @NOME, @SALDOSTR);
		IF (UPPER(@SOLICITANTE) LIKE 'MICROSOFT%') OR (@SOLICITANTE = 'MS SQLEM') OR (@SOLICITANTE = 'MS SQL QUERY ANALYZER')
			ROLLBACK TRANSACTION;
	END

	UPDATE sankhya.AD_ITEMPARADO 
	SET QTDPROD = @QTDNEG 
	WHERE NUNOTA = @NUNOTA 
	AND CODPROD = @CODPROD;

END
GO